#!/usr/bin/env ipython
from multiprocessing import Process, Pipe
import os
import time
import sys
import subprocess
import uuid
%run qci/utils.ipy
runid = getid()
print "RUN ID IS", runid
build_loadgen(10000000,20,1000)
cephpool = "q"+str(runid)
collection = "q"+str(runid)
if "CEPHTYPE" not in os.environ or os.environ["CEPHTYPE"] == "local":
    mkceph_local(cephpool)
elif os.environ["CEPHTYPE"] == "remote":
    mkceph_remote(cephpool)
elif os.environ["CEPHTYPE"] == "primary":
    mkceph_primary(cephpool)
elif os.environ["CEPHTYPE"] == "tier":
    mkceph_tier(cephpool)

mkconf(cephpool, collection)

#start quasar
def start_q():
    stdout=open("log.q.stdout","w")
    rc = subprocess.call(["./exe","-makedb"])
    print "rc0", rc
    if rc != 0:
        sys.exit(rc)
    sys.stdout.flush()
    time.sleep(2)
    rc = subprocess.call(["./exe"],stdout=stdout, stderr=subprocess.STDOUT)    
    print "rc1", rc
    if rc != 0:
        sys.exit(rc)

p = Process(target=start_q)
p.start()

#wait a bit
time.sleep(30)

if not p.is_alive():
    print "quasar died:", p.exitcode
    sys.exit(1)

def start_loadgen():
    stdout=open("log.lg.stdout","w")
    uuids = [str(uuid.uuid4()) for x in xrange(20)]
    rc = subprocess.call(["./loadgen", "-i"]+uuids, stdout=stdout, stderr=subprocess.STDOUT)
    print "INSERT RV:",rc
    if rc != 0:
        sys.exit(rc)
    sys.stdout.flush()
    rc = subprocess.call(["./loadgen", "-v"]+uuids, stdout=stdout, stderr=subprocess.STDOUT)
    print "VERIFY RV:",rc
    if rc != 0:
        sys.exit(rc)


for i in xrange(10):
    p2 = Process(target=start_loadgen)
    p2.start()
    p2.join()
    if p2.exitcode != 0:
        print "EXITCODE FROM LOADGEN:", p2.exitcode
        sys.exit(p2.exitcode)
if not p.is_alive():
    print "quasar died:", p.exitcode
    sys.exit(1)

with open("success","w") as f:
    f.write("OK\n")

os.kill(p.pid, 9)

print "done"

