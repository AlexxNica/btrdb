#!/usr/bin/env ipython
from multiprocessing import Process, Pipe
import os
import time
import sys
import subprocess
import uuid
%run qci/utils.ipy
runid = getid()
print "RUN ID IS", runid
build_loadgen(10000000,20,1000)
cephpool = "q"+str(runid)
collection = "q"+str(runid)
if "CEPHTYPE" not in os.environ or os.environ["CEPHTYPE"] == "local":
    mkceph_local(cephpool)
elif os.environ["CEPHTYPE"] == "remote":
    mkceph_remote(cephpool)
elif os.environ["CEPHTYPE"] == "primary":
    mkceph_primary(cephpool)
elif os.environ["CEPHTYPE"] == "tier":
    mkceph_tier(cephpool)

mkconf(cephpool, collection)

#Create database
rc = subprocess.call(["./exe","-makedb"])
print "rc0", rc
if rc != 0:
    sys.exit(rc)

#start quasar
def start_q():
    stdout=open("log.q.stdout","w")
    rc = subprocess.call(["./exe"],stdout=stdout, stderr=subprocess.STDOUT)    
    print "rc1", rc
    if rc != 0:
        sys.exit(rc)
p = Process(target=start_q)
p.start()

#wait a bit
time.sleep(10)

if not p.is_alive():
    print "quasar died:", p.exitcode
    sys.exit(1)

if "TEST_TYPE" not in os.environ or os.environ["TEST_TYPE"] == "loadgen":
    %run qci/test_loadgen.ipy
elif os.environ["TEST_TYPE"] == "readwrite1":
    print "running reqdwrite1"
    %run qci/test_readwrite1.ipy
    print "run complete"

if not p.is_alive():
    print "quasar died:", p.exitcode
    sys.exit(1)

with open("success","w") as f:
    f.write("OK\n")

print "killing pid",p.pid
os.kill(p.pid, 9)
!pkill exe

if os.environ["CEPHTYPE"] == "tier":
    delceph_tier(cephpool)
else:
    delceph_pool(cephpool)
print "done"

